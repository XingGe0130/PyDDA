.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plot_examples.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_examples.py:


Example on retrieving and plotting winds
----------------------------------------

This is a simple example for how to retrieve and plot winds from 2 radars
using PyDDA.

Author: Robert C. Jackson





.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /source/auto_examples/images/sphx_glr_plot_examples_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /source/auto_examples/images/sphx_glr_plot_examples_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /source/auto_examples/images/sphx_glr_plot_examples_003.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Calculating weights for radars 0 and 1
    Calculating weights for models...
    Starting solver 
    rmsVR = 45.924382151350464
    Total points:92092.0
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |  11.0905|  64.2183|   0.0000|   0.0000|   0.0000|   0.0000|  20.4626
    Norm of gradient: 0.009131918476153678
    Iterations before filter: 10
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |   3.1353|  23.7011|   0.0000|   0.0000|   0.0000|   0.0000|  31.1746
    Norm of gradient: 0.005739523896988587
    Iterations before filter: 20
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |   1.5021|  15.7356|   0.0000|   0.0000|   0.0000|   0.0000|  33.5728
    Norm of gradient: 0.005294325093703345
    Iterations before filter: 30
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |   0.9711|  12.4548|   0.0000|   0.0000|   0.0000|   0.0000|  30.3963
    Norm of gradient: 0.005933535145307758
    Iterations before filter: 40
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |   0.6994|  11.9543|   0.0000|   0.0000|   0.0000|   0.0000|  30.5532
    Norm of gradient: 0.0044610501082408315
    Iterations before filter: 50
    | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel | Max w  
    |   0.6932|  11.9595|   0.0000|   0.0000|   0.0000|   0.0000|  30.5603
    Norm of gradient: 0.004469894253627854
    Iterations before filter: 60
    Applying low pass filter to wind field...
    Iterations after filter: 1
    Iterations after filter: 2
    Done! Time = 203.5




|


.. code-block:: python


    import pyart
    import pydda
    from matplotlib import pyplot as plt


    berr_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR0)
    cpol_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR1)

    sounding = pyart.io.read_arm_sonde(
        pydda.tests.SOUNDING_PATH)


    # Load sounding data and insert as an intialization
    u_init, v_init, w_init = pydda.initialization.make_wind_field_from_profile(
            cpol_grid, sounding[1], vel_field='corrected_velocity')

    # Start the wind retrieval. This example only uses the mass continuity
    # and data weighting constraints.
    Grids = pydda.retrieval.get_dd_wind_field([berr_grid, cpol_grid], u_init,
                                              v_init, w_init, Co=10.0, Cm=1500.0,
                                              Cz=0, 
                                              frz=5000.0, filt_iterations=2,
                                              mask_outside_opt=True, upper_bc=1)
    # Plot a horizontal cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_horiz_xsection_barbs(Grids, background_field='reflectivity',
                                        level=6,
                                        w_vel_contours=[3, 6, 9, 12, 15],
                                        barb_spacing_x_km=5.0,
                                        barb_spacing_y_km=15.0)
    plt.show()

    # Plot a vertical X-Z cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_xz_xsection_barbs(Grids, background_field='reflectivity',
                                     level=40,
                                     w_vel_contours=[3, 6, 9, 12, 15],
                                     barb_spacing_x_km=10.0,
                                     barb_spacing_z_km=2.0)
    plt.show()

    # Plot a vertical Y-Z cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_yz_xsection_barbs(Grids, background_field='reflectivity', 
                                     level=40,
                                     w_vel_contours=[3, 6, 9, 12, 15],
                                     barb_spacing_y_km=10.0,
                                     barb_spacing_z_km=2.0)
    plt.show()

**Total running time of the script:** ( 3 minutes  25.130 seconds)


.. _sphx_glr_download_source_auto_examples_plot_examples.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_examples.py <plot_examples.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_examples.ipynb <plot_examples.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
